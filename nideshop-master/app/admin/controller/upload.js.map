{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/upload.js"
    ],
    "names": [
        "Base",
        "require",
        "fs",
        "fss",
        "module",
        "exports",
        "brandPicAction",
        "brandFile",
        "file",
        "think",
        "isEmpty",
        "fail",
        "that",
        "filename",
        "uuid",
        "ensureDir",
        "ROOT_PATH",
        "is",
        "createReadStream",
        "path",
        "os",
        "createWriteStream",
        "pipe",
        "success",
        "name",
        "fileUrl",
        "config",
        "brandNewPicAction",
        "categoryWapBannerPicAction",
        "imageFile",
        "topicThumbAction",
        "bannerThumbAction",
        "channelThumbAction",
        "uploadVideoAction",
        "console",
        "log",
        "uploadRichTextAction"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/upload.js",
    "sourcesContent": [
        "const Base = require('./base.js');\nconst fs = require('fs');\nconst fss = require('fs-extra');\n\n\nmodule.exports = class extends Base {\n  async brandPicAction() {\n    const brandFile = this.file('brand_pic');\n    if (think.isEmpty(brandFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/brand/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/brand'); //确保目录真的存在\n    const is = fs.createReadStream(brandFile.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n\n    return that.success({\n      name: 'brand_pic',\n      fileUrl: think.config('upimg_url') + filename\n    });\n  }\n\n  async brandNewPicAction() {\n    const brandFile = this.file('brand_new_pic');\n    if (think.isEmpty(brandFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/brand/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/brand'); //确保目录真的存在\n\n    const is = fs.createReadStream(brandFile.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n\n    return that.success({\n      name: 'brand_new_pic',\n      fileUrl: think.config('upimg_url') + filename\n    });\n  }\n\n  async categoryWapBannerPicAction() {\n    const imageFile = this.file('wap_banner_pic');\n    // console.log(imageFile);\n    if (think.isEmpty(imageFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/category/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/category'); //确保目录真的存在\n\n    const is = fs.createReadStream(imageFile.path);\n    // console.log('创建可读流',think.ROOT_PATH);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    // console.log('创建可写流',think.ROOT_PATH);\n    is.pipe(os);\n\n    return that.success({\n      name: 'wap_banner_url',\n      fileUrl:think.config('upimg_url') + filename\n    });\n  }\n\n  async topicThumbAction() {\n    const imageFile = this.file('scene_pic_url');\n    if (think.isEmpty(imageFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/topic/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/topic'); //确保目录真的存在\n\n    const is = fs.createReadStream(imageFile.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n\n    return that.success({\n      name: 'scene_pic_url',\n      fileUrl:think.config('upimg_url') + filename\n    });\n  }\n\n  async bannerThumbAction() {\n    const imageFile = this.file('image_url');\n    if (think.isEmpty(imageFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/banner/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/banner'); //确保目录真的存在\n\n    const is = fs.createReadStream(imageFile.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n\n    return that.success({\n      name: 'image_url',\n      fileUrl:  think.config('upimg_url') +filename\n    });\n  }\n\n  async channelThumbAction() {\n    const imageFile = this.file('icon_url');\n    if (think.isEmpty(imageFile)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/channel/' + think.uuid(32) + '.jpg';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/channel'); //确保目录真的存在\n\n    const is = fs.createReadStream(imageFile.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n\n    return that.success({\n      name: 'icon_url',\n      fileUrl: think.config('upimg_url') +filename\n    });\n  }\n\n  async uploadVideoAction() {\n    const file = this.file('upload_video');\n    if (think.isEmpty(file)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/video/' + think.uuid(32) + '.flv';\n    console.log(filename);\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/video'); //确保目录真的存在\n    const is = fs.createReadStream(file.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n    return that.success({\n      name: 'upload_video',\n      fileUrl:  think.config('upimg_url') +filename\n    });\n  }\n\n  /**\n   * 富文本图片上传专用\n   * @returns {Promise<void>}\n   */\n  async uploadRichTextAction() {\n    const file = this.file('upload_richText');\n    if (think.isEmpty(file)) {\n      return this.fail('保存失败');\n    }\n    const that = this;\n    const filename = '/static/upload/richText/' + think.uuid(32) + '.png';\n    await fss.ensureDir(think.ROOT_PATH + '/www' +'/static/upload/richText'); //确保目录真的存在\n    const is = fs.createReadStream(file.path);\n    const os = fs.createWriteStream(think.ROOT_PATH + '/www' + filename);\n    is.pipe(os);\n    return that.success({\n      name: 'upload_video',\n      fileUrl:  think.config('upimg_url') +filename\n    });\n  }\n};\n"
    ]
}