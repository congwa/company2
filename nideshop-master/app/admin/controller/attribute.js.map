{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/attribute.js"
    ],
    "names": [
        "module",
        "exports",
        "think",
        "Controller",
        "indexAction",
        "attribute_category",
        "model",
        "where",
        "select",
        "data",
        "categoryList",
        "map",
        "item",
        "level",
        "push",
        "child",
        "attribute_category_id",
        "id",
        "success",
        "indexlistAction",
        "obj",
        "label",
        "name",
        "value",
        "children",
        "ob",
        "addAction",
        "isPost",
        "post",
        "values",
        "input_type",
        "sort_order",
        "update",
        "add",
        "infoAction",
        "get",
        "find",
        "infogoodsAction",
        "field",
        "goods_id",
        "deleteAction",
        "limit",
        "delete"
    ],
    "mappings": "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",
    "file": "../../../src/admin/controller/attribute.js",
    "sourcesContent": [
        "module.exports = class extends think.Controller {\n  /**\n   * 获取banner信息\n   * @returns {Promise<void>}\n   */\n  async indexAction() {\n    const attribute_category = await this.model('attribute_category').where().select();\n    const data = await this.model('attribute').where().select();\n    const categoryList = [];\n    attribute_category.map((item) => {\n      item.level = 1;\n      categoryList.push(item);\n      data.map((child) => {\n        if (child.attribute_category_id === item.id) {\n          child.level = 2;\n          categoryList.push(child);\n        }\n      });\n    });\n    return this.success(categoryList);\n  }\n\n  async indexlistAction() {\n    const attribute_category = await this.model('attribute_category').where().select();\n    const data = await this.model('attribute').where().select();\n    const categoryList = [];\n    attribute_category.map((item) => {\n      let obj = {};\n      obj.label = item.name;\n      obj.value = item.id;\n      obj.children = [];\n      data.map( (child) => {\n        if(child.attribute_category_id === item.id) {\n          let ob = {};    \n          ob.value = child.id;\n          ob.label = child.name;\n          obj.children.push(ob);\n        }\n      })\n      categoryList.push(obj);\n    })\n    return this.success(categoryList);\n  }\n\n  /**\n   `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n   `attribute_category_id` int(11) unsigned NOT NULL DEFAULT '0',\n   `name` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',\n   `input_type` tinyint(1) unsigned NOT NULL DEFAULT '1',\n   `values` text COLLATE utf8mb4_unicode_ci NOT NULL,\n   `sort_order` tinyint(3) unsig\n   */\n  async addAction() {\n    if (!this.isPost) {\n      return false;\n    }\n    const id = this.post('id');\n\n    const model = this.model('attribute');\n\n    let values = {\n      attribute_category_id: this.post('attribute_category_id'),\n      name:this.post('name'),\n      input_type:1,\n      values: '',\n      sort_order:0\n    };\n    if (id > 0) {\n      await model.where({id: id}).update(values);\n    } else {\n      delete values.id;\n      await model.add(values);\n    }\n    return this.success(values);\n  }\n\n  async infoAction(){\n    const id = this.post('id') || this.get('id');\n\n    const model = this.model('attribute');\n    const data = await model.where({id: id}).find();\n    return this.success(data);\n  }\n\n  async infogoodsAction() {\n    const id = this.post('id') || this.get('id');\n\n    const model = this.model('goods_attribute');\n    const data = await model.field('attribute_id,value').where({goods_id: id}).select();\n    return this.success(data);\n  }\n\n\n  /**\n   * 删除一个attribute\n   * @returns {Promise<void>}\n   */\n  async deleteAction() {\n    const id = this.post('id');\n    await this.model('attribute').where({id: id}).limit(1).delete();\n\n    // TODO 事务，验证订单是否可删除（只有失效的订单才可以删除）\n\n    return this.success();\n  }\n};\n"
    ]
}