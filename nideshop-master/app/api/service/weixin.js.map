{
    "version": 3,
    "sources": [
        "../../../src/api/service/weixin.js"
    ],
    "names": [
        "crypto",
        "require",
        "md5",
        "rp",
        "module",
        "exports",
        "think",
        "Service",
        "login",
        "code",
        "fullUserInfo",
        "options",
        "method",
        "url",
        "qs",
        "grant_type",
        "js_code",
        "secret",
        "config",
        "appid",
        "sessionData",
        "JSON",
        "parse",
        "openid",
        "sha1",
        "createHash",
        "update",
        "rawData",
        "toString",
        "session_key",
        "digest",
        "signature",
        "wechatUserInfo",
        "decryptUserInfoData",
        "encryptedData",
        "iv",
        "isEmpty",
        "e",
        "sessionKey",
        "decoded",
        "_sessionKey",
        "Buffer",
        "from",
        "decipher",
        "createDecipheriv",
        "setAutoPadding",
        "final",
        "userInfo",
        "watermark",
        "err",
        "createUnifiedOrder",
        "payInfo",
        "WeiXinPay",
        "weixinpay",
        "mch_id",
        "partner_key",
        "Promise",
        "resolve",
        "reject",
        "body",
        "out_trade_no",
        "total_fee",
        "spbill_create_ip",
        "notify_url",
        "trade_type",
        "res",
        "return_code",
        "result_code",
        "returnParams",
        "parseInt",
        "Date",
        "now",
        "nonce_str",
        "prepay_id",
        "paramStr",
        "nonceStr",
        "package",
        "signType",
        "timeStamp",
        "paySign",
        "toUpperCase",
        "buildQuery",
        "queryObj",
        "sortPayOptions",
        "key",
        "Object",
        "keys",
        "sort",
        "payOptionQuery",
        "substring",
        "length",
        "signQuery",
        "queryStr",
        "md5Sign",
        "payNotify",
        "notifyData",
        "notifyObj",
        "sign",
        "signString"
    ],
    "mappings": "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",
    "file": "../../../src/api/service/weixin.js",
    "sourcesContent": [
        "const crypto = require('crypto');\nconst md5 = require('md5');\nconst rp = require('request-promise');\n\nmodule.exports = class extends think.Service {\n  async login(code, fullUserInfo) {\n    try {\n      // 获取 session\n      const options = {\n        method: 'GET',\n        url: 'https://api.weixin.qq.com/sns/jscode2session',\n        qs: {\n          grant_type: 'authorization_code',\n          js_code: code,\n          secret: think.config('weixin.secret'),\n          appid: think.config('weixin.appid')\n        }\n      };\n\n      let sessionData = await rp(options);\n      sessionData = JSON.parse(sessionData);\n      if (!sessionData.openid) {\n        return null;\n      }\n\n      // 验证用户信息完整性\n      const sha1 = crypto.createHash('sha1').update(fullUserInfo.rawData.toString() + sessionData.session_key).digest('hex');\n      if (fullUserInfo.signature !== sha1) {\n        return null;\n      }\n\n      // 解析用户数据\n      const wechatUserInfo = await this.decryptUserInfoData(sessionData.session_key, fullUserInfo.encryptedData, fullUserInfo.iv);\n      if (think.isEmpty(wechatUserInfo)) {\n        return null;\n      }\n      return wechatUserInfo;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * 解析微信登录用户数据\n   * @param sessionKey\n   * @param encryptedData\n   * @param iv\n   * @returns {Promise.<string>}\n   */\n  async decryptUserInfoData(sessionKey, encryptedData, iv) {\n    let decoded = '';\n    try {\n      const _sessionKey = Buffer.from(sessionKey, 'base64');\n      encryptedData = Buffer.from(encryptedData, 'base64');\n      iv = Buffer.from(iv, 'base64');\n      // 解密\n      const decipher = crypto.createDecipheriv('aes-128-cbc', _sessionKey, iv);\n      // 设置自动 padding 为 true，删除填充补位\n      decipher.setAutoPadding(true);\n      decoded = decipher.update(encryptedData, 'binary', 'utf8');\n      decoded += decipher.final('utf8');\n      const userInfo = JSON.parse(decoded);\n      if (userInfo.watermark.appid !== think.config('weixin.appid')) {\n        return null;\n      }\n\n      // 解析后的数据格式\n      // { openId: 'oILjs0JEDIZzaWVc_sJW2k3fhp1k',\n      //   nickName: '明天',\n      //   gender: 1,\n      //   language: 'zh_CN',\n      //   city: 'Shenzhen',\n      //   province: 'Guangdong',\n      //   country: 'China',\n      //   avatarUrl: 'https://wx.qlogo.cn/mmopen/vi_32/9Otwibfa5VXR0ntXdlX84dibbulWLJ0EiacHeAfT1ShG2A7LQa2unfbZVohsWQlmXbwQGM6NnhGFWicY5icdxFVdpLQ/132',\n      //   watermark: { timestamp: 1542639764, appid: 'wx262f4ac3b1c477dd' } }\n      return userInfo;\n    } catch (err) {\n      return null;\n    }\n  }\n\n  /**\n   * 统一下单\n   * @param payInfo\n   * @returns {Promise}\n   */\n  createUnifiedOrder(payInfo) {\n    const WeiXinPay = require('weixinpay');\n    const weixinpay = new WeiXinPay({\n      appid: think.config('weixin.appid'), // 微信小程序appid\n      openid: payInfo.openid, // 用户openid\n      mch_id: think.config('weixin.mch_id'), // 商户帐号ID\n      partner_key: think.config('weixin.partner_key') // 秘钥\n    });\n    return new Promise((resolve, reject) => {\n      weixinpay.createUnifiedOrder({\n        body: payInfo.body,\n        out_trade_no: payInfo.out_trade_no,\n        total_fee: payInfo.total_fee,\n        spbill_create_ip: payInfo.spbill_create_ip,\n        notify_url: think.config('weixin.notify_url'),\n        trade_type: 'JSAPI'\n      }, (res) => {\n        if (res.return_code === 'SUCCESS' && res.result_code === 'SUCCESS') {\n          const returnParams = {\n            'appid': res.appid,\n            'timeStamp': parseInt(Date.now() / 1000) + '',\n            'nonceStr': res.nonce_str,\n            'package': 'prepay_id=' + res.prepay_id,\n            'signType': 'MD5'\n          };\n          const paramStr = `appId=${returnParams.appid}&nonceStr=${returnParams.nonceStr}&package=${returnParams.package}&signType=${returnParams.signType}&timeStamp=${returnParams.timeStamp}&key=` + think.config('weixin.partner_key');\n          returnParams.paySign = md5(paramStr).toUpperCase();\n          resolve(returnParams);\n        } else {\n          reject(res);\n        }\n      });\n    });\n  }\n\n  /**\n   * 生成排序后的支付参数 query\n   * @param queryObj\n   * @returns {Promise.<string>}\n   */\n  buildQuery(queryObj) {\n    const sortPayOptions = {};\n    for (const key of Object.keys(queryObj).sort()) {\n      sortPayOptions[key] = queryObj[key];\n    }\n    let payOptionQuery = '';\n    for (const key of Object.keys(sortPayOptions).sort()) {\n      payOptionQuery += key + '=' + sortPayOptions[key] + '&';\n    }\n    payOptionQuery = payOptionQuery.substring(0, payOptionQuery.length - 1);\n    return payOptionQuery;\n  }\n\n  /**\n   * 对 query 进行签名\n   * @param queryStr\n   * @returns {Promise.<string>}\n   */\n  signQuery(queryStr) {\n    queryStr = queryStr + '&key=' + think.config('weixin.partner_key');\n    const md5 = require('md5');\n    const md5Sign = md5(queryStr);\n    return md5Sign.toUpperCase();\n  }\n\n  /**\n   * 处理微信支付回调\n   * @param notifyData\n   * @returns {{}}\n   */\n  payNotify(notifyData) {\n    if (think.isEmpty(notifyData)) {\n      return false;\n    }\n\n    const notifyObj = {};\n    let sign = '';\n    for (const key of Object.keys(notifyData)) {\n      if (key !== 'sign') {\n        notifyObj[key] = notifyData[key][0];\n      } else {\n        sign = notifyData[key][0];\n      }\n    }\n    if (notifyObj.return_code !== 'SUCCESS' || notifyObj.result_code !== 'SUCCESS') {\n      return false;\n    }\n    const signString = this.signQuery(this.buildQuery(notifyObj));\n    if (think.isEmpty(sign) || signString !== sign) {\n      return false;\n    }\n    return notifyObj;\n  }\n};\n"
    ]
}